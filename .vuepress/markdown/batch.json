{
  "information_for_contributors": [
    "This file has been converted from https://github.com/mmims/language-batchfile/blob/master/grammars/batchfile.cson",
    "If you want to provide a fix or improvement, please create a pull request against the original repository.",
    "Once accepted there, we are happy to receive an update request."
  ],
  "version": "https://github.com/mmims/language-batchfile/commit/95ea8c699f7a8296b15767069868532d52631c46",
  "name": "bat",
  "scopeName": "source.batchfile",
  "patterns": [
    {
      "include": "#commands"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#controls"
    },
    {
      "include": "#escaped_characters"
    },
    {
      "include": "#labels"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#parens"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#variables"
    }
  ],
  "repository": {
    "commands": {
      "patterns": [
        {
          "match": "(?<=^|&&)\\s*([\\w-]+)(?=$|\\s)",
          "name": "support.function.batchfile"
        },
        {
          "include": "#command_set"
        }
      ]
    },
    "command_set": {
      "patterns": [
        {
          "begin": "(?<=^|[\\s@])(?i:SET)(?=$|\\s)",
          "beginCaptures": {
            "0": {
              "name": "keyword.command.batchfile"
            }
          },
          "end": "(?=$\\n|[&|><)])",
          "patterns": [
            {
              "include": "#command_set_inside"
            }
          ]
        }
      ]
    },
    "command_set_inside": {
      "patterns": [
        {
          "include": "#escaped_characters"
        },
        {
          "include": "#variables"
        },
        {
          "include": "#numbers"
        },
        {
          "include": "#parens"
        },
        {
          "include": "#command_set_strings"
        },
        {
          "include": "#strings"
        },
        {
          "begin": "([^ ][^=]*)(=)",
          "beginCaptures": {
            "1": {
              "name": "variable.other.readwrite.batchfile"
            },
            "2": {
              "name": "keyword.operator.assignment.batchfile"
            }
          },
          "end": "(?=$\\n|[&|><)])",
          "patterns": [
            {
              "include": "#escaped_characters"
            },
            {
              "include": "#variables"
            },
            {
              "include": "#numbers"
            },
            {
              "include": "#parens"
            },
            {
              "include": "#strings"
            }
          ]
        },
        {
          "begin": "\\s+/[aA]\\s+",
          "end": "(?=$\\n|[&|><)])",
          "name": "meta.expression.set.batchfile",
          "patterns": [
            {
              "begin": "\"",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.string.begin.batchfile"
                }
              },
              "end": "\"",
              "endCaptures": {
                "0": {
                  "name": "punctuation.definition.string.end.batchfile"
                }
              },
              "name": "string.quoted.double.batchfile",
              "patterns": [
                {
                  "include": "#command_set_inside_arithmetic"
                },
                {
                  "include": "#command_set_group"
                },
                {
                  "include": "#variables"
                }
              ]
            },
            {
              "include": "#command_set_inside_arithmetic"
            },
            {
              "include": "#command_set_group"
            }
          ]
        },
        {
          "begin": "\\s+/[pP]\\s+",
          "end": "(?=$\\n|[&|><)])",
          "patterns": [
            {
              "include": "#command_set_strings"
            },
            {
              "begin": "([^ ][^=]*)(=)",
              "beginCaptures": {
                "1": {
                  "name": "variable.other.readwrite.batchfile"
                },
                "2": {
                  "name": "keyword.operator.assignment.batchfile"
                }
              },
              "end": "(?=$\\n|[&|><)])",
              "name": "meta.prompt.set.batchfile",
              "patterns": [
                {
                  "include": "#strings"
                }
              ]
            }
          ]
        }
      ]
    },
    "command_set_group": {
      "patterns": [
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.group.begin.batchfile"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.section.group.end.batchfile"
            }
          },
          "patterns": [
            {
              "include": "#command_set_inside_arithmetic"
            }
          ]
        }
      ]
    },
    "command_set_inside_arithmetic": {
      "patterns": [
        {
          "include": "#command_set_operators"
        },
        {
          "include": "#numbers"
        },
        {
          "match": ",",
          "name": "punctuation.separator.batchfile"
        }
      ]
    },
    "command_set_operators": {
      "patterns": [
        {
          "match": "([^ ]*)(\\+\\=|\\-\\=|\\*\\=|\\/\\=|%%\\=|&\\=|\\|\\=|\\^\\=|<<\\=|>>\\=)",
          "captures": {
            "1": {
              "name": "variable.other.readwrite.batchfile"
            },
            "2": {
              "name": "keyword.operator.assignment.augmented.batchfile"
            }
          }
        },
        {
          "match": "\\+|\\-|/|\\*|%%|\\||&|\\^|<<|>>|~",
          "name": "keyword.operator.arithmetic.batchfile"
        },
        {
          "match": "!",
          "name": "keyword.operator.logical.batchfile"
        },
        {
          "match": "([^ ][^=]*)(=)",
          "captures": {
            "1": {
              "name": "variable.other.readwrite.batchfile"
            },
            "2": {
              "name": "keyword.operator.assignment.batchfile"
            }
          }
        }
      ]
    },
    "command_set_strings": {
      "patterns": [
        {
          "begin": "(\")\\s*([^ ][^=]*)(=)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.batchfile"
            },
            "2": {
              "name": "variable.other.readwrite.batchfile"
            },
            "3": {
              "name": "keyword.operator.assignment.batchfile"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.batchfile"
            }
          },
          "name": "string.quoted.double.batchfile",
          "patterns": [
            {
              "include": "#variables"
            },
            {
              "include": "#numbers"
            },
            {
              "include": "#escaped_characters"
            }
          ]
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "begin": "(?<=^)(#)",
          "end": "(?=$\\n|[&|><)])",
          "name": "comment.line.rem.batchfile"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "match": "\\b(?i:NUL)\\b",
          "name": "constant.language.batchfile"
        }
      ]
    },
    "controls": {
      "patterns": [
        {
          "match": "(?i)(?<=^|\\s)(?:call|exit(?=$|\\s)|goto(?=$|\\s|:))",
          "name": "keyword.control.statement.batchfile"
        },
        {
          "match": "(?<=^|\\s)(?i)(if)\\s+(?:(not)\\s+)?(exist|defined|errorlevel|cmdextversion)(?=\\s)",
          "captures": {
            "1": {
              "name": "keyword.control.conditional.batchfile"
            },
            "2": {
              "name": "keyword.operator.logical.batchfile"
            },
            "3": {
              "name": "keyword.other.special-method.batchfile"
            }
          }
        },
        {
          "match": "(?<=^|\\s)(?i)(?:if|else)(?=$|\\s)",
          "name": "keyword.control.conditional.batchfile"
        },
        {
          "match": "(?<=^|\\s)(?i)for(?=\\s)",
          "name": "keyword.control.repeat.batchfile"
        }
      ]
    },
    "escaped_characters": {
      "patterns": [
        {
          "match": "%%|\\^\\^!|\\^(?=.)|\\^\\n",
          "name": "constant.character.escape.batchfile"
        }
      ]
    },
    "labels": {
      "patterns": [
        {
          "match": "(?i)(?:^\\s*|(?<=goto)\\s*)(:)([^+=,;:\\s].*)$",
          "captures": {
            "1": {
              "name": "punctuation.separator.batchfile"
            },
            "2": {
              "name": "keyword.other.special-method.batchfile"
            }
          }
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "match": "(?<=^|\\s|=)(0[xX][0-9A-Fa-f]*|[+-]?\\d+)(?=$|\\s|<|>)",
          "name": "constant.numeric.batchfile"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "@(?=\\S)",
          "name": "keyword.operator.at.batchfile"
        },
        {
          "match": "(?<=\\s)(?i:EQU|NEQ|LSS|LEQ|GTR|GEQ)(?=\\s)|==",
          "name": "keyword.operator.comparison.batchfile"
        },
        {
          "match": "(?<=\\s)(?i)(NOT)(?=\\s)",
          "name": "keyword.operator.logical.batchfile"
        },
        {
          "match": "(?<!\\^)&&?|\\|\\|",
          "name": "keyword.operator.conditional.batchfile"
        },
        {
          "match": "(?<!\\^)\\|",
          "name": "keyword.operator.pipe.batchfile"
        },
        {
          "match": "<&?|>[&>]?",
          "name": "keyword.operator.redirection.batchfile"
        }
      ]
    },
    "parens": {
      "patterns": [
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.group.begin.batchfile"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.section.group.end.batchfile"
            }
          },
          "name": "meta.group.batchfile",
          "patterns": [
            {
              "match": ",|;",
              "name": "punctuation.separator.batchfile"
            },
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "begin": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.batchfile"
            }
          },
          "end": "(\")|(\\n)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.batchfile"
            },
            "2": {
              "name": "invalid.illegal.newline.batchfile"
            }
          },
          "name": "string.quoted.double.batchfile",
          "patterns": [
            {
              "match": "%%",
              "name": "constant.character.escape.batchfile"
            },
            {
              "include": "#variables"
            }
          ]
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "match": "(%)((~([fdpnxsatz]|\\$PATH:)*)?\\d|\\*)",
          "captures": {
            "1": {
              "name": "punctuation.definition.variable.batchfile"
            },
            "2": {
              "name": "variable.parameter.batchfile"
            }
          }
        },
        {
          "include": "#variable"
        },
        {
          "include": "#variable_delayed_expansion"
        }
      ]
    },
    "variable": {
      "patterns": [
        {
          "begin": "%(?=[^%]+%)",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.variable.begin.batchfile"
            }
          },
          "end": "(%)|\\n",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.variable.end.batchfile"
            }
          },
          "name": "variable.other.readwrite.batchfile",
          "patterns": [
            {
              "begin": ":~",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.separator.batchfile"
                }
              },
              "end": "(?=%|\\n)",
              "name": "meta.variable.substring.batchfile",
              "patterns": [
                {
                  "include": "#variable_substring"
                }
              ]
            },
            {
              "begin": ":",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.separator.batchfile"
                }
              },
              "end": "(?=%|\\n)",
              "name": "meta.variable.substitution.batchfile",
              "patterns": [
                {
                  "include": "#variable_replace"
                },
                {
                  "begin": "=",
                  "beginCaptures": {
                    "0": {
                      "name": "punctuation.separator.batchfile"
                    }
                  },
                  "end": "(?=%|\\n)",
                  "patterns": [
                    {
                      "include": "#variable_delayed_expansion"
                    },
                    {
                      "match": "[^%]+",
                      "name": "string.unquoted.batchfile"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "variable_delayed_expansion": {
      "patterns": [
        {
          "begin": "!(?=[^!]+!)",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.variable.begin.batchfile"
            }
          },
          "end": "(!)|\\n",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.variable.end.batchfile"
            }
          },
          "name": "variable.other.readwrite.batchfile",
          "patterns": [
            {
              "begin": ":~",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.separator.batchfile"
                }
              },
              "end": "(?=!|\\n)",
              "name": "meta.variable.substring.batchfile",
              "patterns": [
                {
                  "include": "#variable_substring"
                }
              ]
            },
            {
              "begin": ":",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.separator.batchfile"
                }
              },
              "end": "(?=!|\\n)",
              "name": "meta.variable.substitution.batchfile",
              "patterns": [
                {
                  "include": "#escaped_characters"
                },
                {
                  "include": "#variable_replace"
                },
                {
                  "include": "#variable"
                },
                {
                  "begin": "=",
                  "beginCaptures": {
                    "0": {
                      "name": "punctuation.separator.batchfile"
                    }
                  },
                  "end": "(?=!|\\n)",
                  "patterns": [
                    {
                      "include": "#variable"
                    },
                    {
                      "match": "[^!]+",
                      "name": "string.unquoted.batchfile"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "variable_replace": {
      "patterns": [
        {
          "match": "[^=%!\\n]+",
          "name": "string.unquoted.batchfile"
        }
      ]
    },
    "variable_substring": {
      "patterns": [
        {
          "match": "([+-]?\\d+)(?:(,)([+-]?\\d+))?",
          "captures": {
            "1": {
              "name": "constant.numeric.batchfile"
            },
            "2": {
              "name": "punctuation.separator.batchfile"
            },
            "3": {
              "name": "constant.numeric.batchfile"
            }
          }
        }
      ]
    }
  }
}